package day09;

import java.util.ArrayList;
import java.util.Collections;

public class SortObjectWithMethod {
    public static void main(String[] args) {
        //2. 객체를 만들고
		사람 사람1 = new 사람("홍길동", 20);
		사람 사람2 = new 사람("유관순", 17);
		사람 사람3 = new 사람("을지문덕", 21);
		사람 사람4 = new 사람("이순신", 30);
		사람 사람5 = new 사람("강감찬", 28);
		//3. 배열보다는 이제부터는 list에 객체를 담는다.
		// -> list는 빈list에 add해서 넣는것으로 하자.. 생성자에 바로..x?
		ArrayList<사람> 사람들 = new ArrayList<>();
		사람들.add(사람1);
		사람들.add(사람2);
		사람들.add(사람3);
		사람들.add(사람4);
		사람들.add(사람5);
		//4. 일괄처리 -> 숫자인변을 출력해봤는데 정렬이 안되어있따. -> 객체를 1변수를 기준으로 정렬할 수 있을까
        for (사람 사람 : 사람들) {
			사람.자기소개();
        }
        System.out.println("==================================");
        // 5.  객체list를 arraylist에 넣었으니, Collections.sort(객체list)? -> 에러난다
        // -> 문자열 객체list는 정렬됬는데,  문자열+정수의 여러변수를 가진 객체list는 정렬안된다!
        // -> 기준이 어느변수인지에 따라 정렬결과가 바뀐다. -> 객체내부에는 정렬기준이 2개이상이라 Collections.sort()못한다!!
        // Collections.sort(사람들); // 에러.

        // 6. 사실 자바가 interface로 메서드명 통일 계약해놓은 것이 sort()다
        //	- 어려운 부분 다쫘났고, `메서드 제공class에 따라 바뀌는 부분`을 `메서드이름만 sort()`로
        //	- 일단 `객체는 안돌아가는 상태로 미완성 일단 구현`해놨으니
        //  - 객체 등 새로운 자료구조를 정렬할거면, `하카class별로 통일된 메서드명으로 짜서 완성시켜라~`
        // 7. **`sort()`는 는 2번째인자에, <그때그때마다 바뀌는 코드>를 짜서 넣어줄 수 있다.**
        //    - 그리고 `정렬기준을 정해주는 내부메소드`를 자바가 interface로 메서드명 통일 계약해놓았다**
        //    - 어려운 부분 다쫘났고, 2번째 인자 이용 + `메서드 제공class? 사용자?에 따라 바뀌는 부분`을 `통일계약된 메서드이름으로 xxxx()`로
        // 구현해서 써라
        //        - 일단 `객체는 안돌아가는 상태로 일단 구현`해놨으니 필요에 따라서 2번째 인자 + 인터페이스로 강제한 메소드를 활용해서 구현
        //        - 객체 등 새로운 자료구조를 정렬할거면, `하카class별로 통일된 메서드명으로 짜서 완성시켜라~`
		// -> **즉, 1) 내가 `코드를 짜서 sort의 2번째인자로 넘길`건데, 그 2) `코드짤 때, 메서드명을 막쓰면 안되고, 자바가 인터페이스로 통일시켜놓은 메서드명을 써서 구현`**

		// -> 8. 직접 자바sort를 까볼순 없어서, 비슷한 느낌으로 짜보자.
		// -> SortObjectWithMethod2.java 로 생성


    }
}

//1. 정렬대상객체를 만들기 위한 class하나 만들기
class 사람 {
	String 이름;
	int 나이;

	public 사람(String 이름, int 나이) {
		this.이름 = 이름;
		this.나이 = 나이;
	}

	void 자기소개(){
        System.out.printf("안녕하세요 저는 %s이고, 나이 %d살 입니다.\n", this.이름, this.나이);
	}
}
